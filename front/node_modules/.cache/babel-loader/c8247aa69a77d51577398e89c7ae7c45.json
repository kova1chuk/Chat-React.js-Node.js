{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport classNames from \"classnames\";\nimport readedSvg from \"assets/img/readed.svg\";\nimport noreadedSvg from \"assets/img/noreaded.svg\";\nimport \"./Message.scss\";\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  isMe,\n  isReaded,\n  attachments,\n  isTyping\n}) => React.createElement(\"div\", {\n  className: classNames(\"message\", {\n    \"message--isme\": isMe,\n    \"message--is-typing\": isTyping,\n    \"message--image\": attachments && attachments.length === 1\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"message__content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, isMe && (isReaded ? React.createElement(\"img\", {\n  className: \"message__icon-readed\",\n  src: readedSvg,\n  alt: \"Readed icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}) : React.createElement(\"img\", {\n  className: \"message__icon-readed message__icon-readed--no\",\n  src: noreadedSvg,\n  alt: \"No readed icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"message__avatar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: avatar,\n  alt: `Avatar ${user.fullname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"message__info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, (text || isTyping) && React.createElement(\"div\", {\n  className: \"message__bubble\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, text && React.createElement(\"p\", {\n  className: \"message__text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, text), isTyping && React.createElement(\"div\", {\n  className: \"message__typing\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}))), React.createElement(\"div\", {\n  className: \"message__attachments\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, attachments && attachments.map(item => React.createElement(\"div\", {\n  className: \"message__attachments-item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: item.url,\n  alt: item.filename,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n})))), date && React.createElement(\"span\", {\n  className: \"message__date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, formatDistanceToNow(new Date(date), {\n  addSuffix: true\n})))));\n\nMessage.defaultProps = {\n  user: {}\n};\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isTyping: PropTypes.bool\n};\nexport default Message;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.js"],"names":["React","PropTypes","formatDistanceToNow","classNames","Message","avatar","user","text","date","isMe","isReaded","attachments","isTyping","length","readedSvg","noreadedSvg","fullname","map","item","url","filename","Date","addSuffix","defaultProps","propTypes","string","object","array","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport classNames from \"classnames\";\n\nimport readedSvg from \"assets/img/readed.svg\";\nimport noreadedSvg from \"assets/img/noreaded.svg\";\n\nimport \"./Message.scss\";\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  isMe,\n  isReaded,\n  attachments,\n  isTyping\n}) => (\n  <div\n    className={classNames(\"message\", {\n      \"message--isme\": isMe,\n      \"message--is-typing\": isTyping,\n      \"message--image\": attachments && attachments.length === 1\n    })}\n  >\n    <div className=\"message__content\">\n      {isMe &&\n        (isReaded ? (\n          <img\n            className=\"message__icon-readed\"\n            src={readedSvg}\n            alt=\"Readed icon\"\n          />\n        ) : (\n          <img\n            className=\"message__icon-readed message__icon-readed--no\"\n            src={noreadedSvg}\n            alt=\"No readed icon\"\n          />\n        ))}\n      <div className=\"message__avatar\">\n        <img src={avatar} alt={`Avatar ${user.fullname}`} />\n      </div>\n      <div className=\"message__info\">\n        {(text || isTyping) && (\n          <div className=\"message__bubble\">\n            {text && <p className=\"message__text\">{text}</p>}\n            {isTyping && (\n              <div className=\"message__typing\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            )}\n          </div>\n        )}\n        <div className=\"message__attachments\">\n          {attachments &&\n            attachments.map(item => (\n              <div className=\"message__attachments-item\">\n                <img src={item.url} alt={item.filename} />\n              </div>\n            ))}\n        </div>\n        {date && (\n          <span className=\"message__date\">\n            {formatDistanceToNow(new Date(date), { addSuffix: true })}\n          </span>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nMessage.defaultProps = {\n  user: {}\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isTyping: PropTypes.bool\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}