{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport classNames from \"classnames\";\nimport readedSvg from \"assets/img/readed.svg\";\nimport noreadedSvg from \"assets/img/noreaded.svg\";\nimport \"./Message.scss\";\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  isMe,\n  isReaded,\n  attachments\n}) => React.createElement(\"div\", {\n  className: classNames(\"message\", {\n    \"message--isme\": isMe\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"message__content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, isMe && isReaded ? React.createElement(\"img\", {\n  className: \"message__icon-readed\",\n  src: readedSvg,\n  alt: \"Readed icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}) : React.createElement(\"img\", {\n  className: \"message__icon-readed message__icon-readed--no\",\n  src: noreadedSvg,\n  alt: \"No readed icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"message__avatar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: avatar,\n  alt: `Avatar ${user.fullname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"message__info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"message__bubble\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"message__text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, text)), React.createElement(\"div\", {\n  className: \"message__attachments\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, attachments && attachments.map(item => React.createElement(\"div\", {\n  className: \"message__attachments-item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: item.url,\n  alt: item.filename,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n})))), React.createElement(\"span\", {\n  className: \"message__date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, formatDistanceToNow(new Date(date), {\n  addSuffix: true\n})))));\n\nMessage.defaultProps = {\n  user: {}\n};\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isTyping: PropTypes.bool\n};\nexport default Message;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.jsx"],"names":["React","PropTypes","formatDistanceToNow","classNames","Message","avatar","user","text","date","isMe","isReaded","attachments","readedSvg","noreadedSvg","fullname","map","item","url","filename","Date","addSuffix","defaultProps","propTypes","string","object","array","isTyping","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAKA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA,QAAlC;AAA4CC,EAAAA;AAA5C,CAAD,KACd;AAAK,EAAA,SAAS,EAAER,UAAU,CAAC,SAAD,EAAY;AAAE,qBAAiBM;AAAnB,GAAZ,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,IAAI,IAAIC,QAAR,GACC;AACE,EAAA,SAAS,EAAC,sBADZ;AAEE,EAAA,GAAG,EAAEE,SAFP;AAGE,EAAA,GAAG,EAAC,aAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,GAOC;AACE,EAAA,SAAS,EAAC,+CADZ;AAEE,EAAA,GAAG,EAAEC,WAFP;AAGE,EAAA,GAAG,EAAC,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARJ,EAcE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAER,MAAV;AAAkB,EAAA,GAAG,EAAG,UAASC,IAAI,CAACQ,QAAS,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAdF,EAiBE;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8BP,IAA9B,CADF,CADF,EAIE;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGI,WAAW,IACVA,WAAW,CAACI,GAAZ,CAAgBC,IAAI,IAClB;AAAK,EAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,EAAA,GAAG,EAAED,IAAI,CAACE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CAFJ,CAJF,EAYE;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGhB,mBAAmB,CAAC,IAAIiB,IAAJ,CAASX,IAAT,CAAD,EAAiB;AAAEY,EAAAA,SAAS,EAAE;AAAb,CAAjB,CADtB,CAZF,CAjBF,CADF,CADF;;AAuCAhB,OAAO,CAACiB,YAAR,GAAuB;AACrBf,EAAAA,IAAI,EAAE;AADe,CAAvB;AAIAF,OAAO,CAACkB,SAAR,GAAoB;AAClBjB,EAAAA,MAAM,EAAEJ,SAAS,CAACsB,MADA;AAElBhB,EAAAA,IAAI,EAAEN,SAAS,CAACsB,MAFE;AAGlBf,EAAAA,IAAI,EAAEP,SAAS,CAACsB,MAHE;AAIlBjB,EAAAA,IAAI,EAAEL,SAAS,CAACuB,MAJE;AAKlBb,EAAAA,WAAW,EAAEV,SAAS,CAACwB,KALL;AAMlBC,EAAAA,QAAQ,EAAEzB,SAAS,CAAC0B;AANF,CAApB;AASA,eAAevB,OAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport classNames from \"classnames\";\n\nimport readedSvg from \"assets/img/readed.svg\";\nimport noreadedSvg from \"assets/img/noreaded.svg\";\n\nimport \"./Message.scss\";\n\nconst Message = ({ avatar, user, text, date, isMe, isReaded, attachments }) => (\n  <div className={classNames(\"message\", { \"message--isme\": isMe })}>\n    <div className=\"message__content\">\n      {isMe && isReaded ? (\n        <img\n          className=\"message__icon-readed\"\n          src={readedSvg}\n          alt=\"Readed icon\"\n        />\n      ) : (\n        <img\n          className=\"message__icon-readed message__icon-readed--no\"\n          src={noreadedSvg}\n          alt=\"No readed icon\"\n        />\n      )}\n      <div className=\"message__avatar\">\n        <img src={avatar} alt={`Avatar ${user.fullname}`} />\n      </div>\n      <div className=\"message__info\">\n        <div className=\"message__bubble\">\n          <p className=\"message__text\">{text}</p>\n        </div>\n        <div className=\"message__attachments\">\n          {attachments &&\n            attachments.map(item => (\n              <div className=\"message__attachments-item\">\n                <img src={item.url} alt={item.filename} />\n              </div>\n            ))}\n        </div>\n        <span className=\"message__date\">\n          {formatDistanceToNow(new Date(date), { addSuffix: true })}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nMessage.defaultProps = {\n  user: {}\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isTyping: PropTypes.bool\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}