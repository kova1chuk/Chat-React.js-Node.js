{"ast":null,"code":"import { messagesApi } from \"utils/api\";\nconst actions = {\n  setMessages: items => ({\n    type: \"MESSAGES:SET_ITEMS\",\n    payload: items\n  }),\n  setIsLoading: isLoading => ({\n    type: \"MESSAGES:SET_IS_LOADING\",\n    payload: isLoading\n  }),\n  fetchMessages: dialogId => dispatch => {\n    dispatch(actions.setIsLoading(true));\n    messagesApi.getAllByDialogId(dialogId).then(({\n      data\n    }) => {\n      dispatch(actions.setMessages(data));\n      dispatch(actions.setIsLoading(false));\n    }).catch(actions.setIsLoading(false));\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/redux/actions/messages.js"],"names":["messagesApi","actions","setMessages","items","type","payload","setIsLoading","isLoading","fetchMessages","dialogId","dispatch","getAllByDialogId","then","data","catch"],"mappings":"AAAA,SAASA,WAAT,QAA4B,WAA5B;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAEC,KAAK,KAAK;AACrBC,IAAAA,IAAI,EAAE,oBADe;AAErBC,IAAAA,OAAO,EAAEF;AAFY,GAAL,CADJ;AAKdG,EAAAA,YAAY,EAAEC,SAAS,KAAK;AAC1BH,IAAAA,IAAI,EAAE,yBADoB;AAE1BC,IAAAA,OAAO,EAAEE;AAFiB,GAAL,CALT;AASdC,EAAAA,aAAa,EAAEC,QAAQ,IAAIC,QAAQ,IAAI;AACrCA,IAAAA,QAAQ,CAACT,OAAO,CAACK,YAAR,CAAqB,IAArB,CAAD,CAAR;AACAN,IAAAA,WAAW,CACRW,gBADH,CACoBF,QADpB,EAEGG,IAFH,CAEQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBH,MAAAA,QAAQ,CAACT,OAAO,CAACC,WAAR,CAAoBW,IAApB,CAAD,CAAR;AACAH,MAAAA,QAAQ,CAACT,OAAO,CAACK,YAAR,CAAqB,KAArB,CAAD,CAAR;AACD,KALH,EAMGQ,KANH,CAMSb,OAAO,CAACK,YAAR,CAAqB,KAArB,CANT;AAOD;AAlBa,CAAhB;AAqBA,eAAeL,OAAf","sourcesContent":["import { messagesApi } from \"utils/api\";\n\nconst actions = {\n  setMessages: items => ({\n    type: \"MESSAGES:SET_ITEMS\",\n    payload: items\n  }),\n  setIsLoading: isLoading => ({\n    type: \"MESSAGES:SET_IS_LOADING\",\n    payload: isLoading\n  }),\n  fetchMessages: dialogId => dispatch => {\n    dispatch(actions.setIsLoading(true));\n    messagesApi\n      .getAllByDialogId(dialogId)\n      .then(({ data }) => {\n        dispatch(actions.setMessages(data));\n        dispatch(actions.setIsLoading(false));\n      })\n      .catch(actions.setIsLoading(false));\n  }\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}