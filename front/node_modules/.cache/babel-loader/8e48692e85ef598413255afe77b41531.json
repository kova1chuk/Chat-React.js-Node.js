{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/modules/RegisterForm/containers/RegisterForm.js\";\nimport { withFormik } from \"formik\"; // import RegisterForm from \"../components/RegisterForm\";\n// export default withFormik({\n//   enableReinitialize: true,\n//   mapPropsToValues: () => ({\n//     email: \"fasd\",\n//     fullname: \"\",\n//     password: \"\",\n//     password_2: \"\"\n//   }),\n//   validate: values => {\n//     let errors = {};\n//     if (!values.email) {\n//       errors.email = \"Required\";\n//     } else if (\n//       !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n//     ) {\n//       errors.email = \"Invalid email address\";\n//     }\n//     return errors;\n//   },\n//   handleSubmit: (values, { setSubmitting }) => {\n//     setTimeout(() => {\n//       alert(JSON.stringify(values, null, 2));\n//       setSubmitting(false);\n//     }, 1000);\n//   },\n//   displayName: \"RegisterForm\"\n// })(RegisterForm);\n\nconst MyForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name,\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), errors.name && touched.name && React.createElement(\"div\", {\n    id: \"feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, errors.name), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst RegisterForm = withFormik({\n  mapPropsToValues: () => ({\n    name: \"\"\n  }),\n  // Custom sync validation\n  validate: values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: \"BasicForm\"\n})(MyForm);\nexport default RegisterForm;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/modules/RegisterForm/containers/RegisterForm.js"],"names":["withFormik","MyForm","props","values","touched","errors","handleChange","handleBlur","handleSubmit","name","RegisterForm","mapPropsToValues","validate","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":";AAAA,SAASA,UAAT,QAA2B,QAA3B,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,QAEpBC,MAFoB,GAQlBD,KARkB,CAEpBC,MAFoB;AAAA,QAGpBC,OAHoB,GAQlBF,KARkB,CAGpBE,OAHoB;AAAA,QAIpBC,MAJoB,GAQlBH,KARkB,CAIpBG,MAJoB;AAAA,QAKpBC,YALoB,GAQlBJ,KARkB,CAKpBI,YALoB;AAAA,QAMpBC,UANoB,GAQlBL,KARkB,CAMpBK,UANoB;AAAA,QAOpBC,YAPoB,GAQlBN,KARkB,CAOpBM,YAPoB;AAStB,SACE;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,EAAEF,YAFZ;AAGE,IAAA,MAAM,EAAEC,UAHV;AAIE,IAAA,KAAK,EAAEJ,MAAM,CAACM,IAJhB;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGJ,MAAM,CAACI,IAAP,IAAeL,OAAO,CAACK,IAAvB,IAA+B;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBJ,MAAM,CAACI,IAA3B,CARlC,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF;AAaD,CAtBD;;AAwBA,MAAMC,YAAY,GAAGV,UAAU,CAAC;AAC9BW,EAAAA,gBAAgB,EAAE,OAAO;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAAP,CADY;AAG9B;AACAG,EAAAA,QAAQ,EAAET,MAAM,IAAI;AAClB,UAAME,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACF,MAAM,CAACM,IAAZ,EAAkB;AAChBJ,MAAAA,MAAM,CAACI,IAAP,GAAc,UAAd;AACD;;AAED,WAAOJ,MAAP;AACD,GAZ6B;AAc9BG,EAAAA,YAAY,EAAE,CAACL,MAAD,EAAS;AAAEU,IAAAA;AAAF,GAAT,KAA+B;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAed,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAU,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAnB6B;AAqB9BK,EAAAA,WAAW,EAAE;AArBiB,CAAD,CAAV,CAsBlBjB,MAtBkB,CAArB;AAwBA,eAAeS,YAAf","sourcesContent":["import { withFormik } from \"formik\";\n\n// import RegisterForm from \"../components/RegisterForm\";\n\n// export default withFormik({\n//   enableReinitialize: true,\n//   mapPropsToValues: () => ({\n//     email: \"fasd\",\n//     fullname: \"\",\n//     password: \"\",\n//     password_2: \"\"\n//   }),\n\n//   validate: values => {\n//     let errors = {};\n//     if (!values.email) {\n//       errors.email = \"Required\";\n//     } else if (\n//       !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n//     ) {\n//       errors.email = \"Invalid email address\";\n//     }\n//     return errors;\n//   },\n\n//   handleSubmit: (values, { setSubmitting }) => {\n//     setTimeout(() => {\n//       alert(JSON.stringify(values, null, 2));\n//       setSubmitting(false);\n//     }, 1000);\n//   },\n\n//   displayName: \"RegisterForm\"\n// })(RegisterForm);\n\nconst MyForm = props => {\n  const {\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values.name}\n        name=\"name\"\n      />\n      {errors.name && touched.name && <div id=\"feedback\">{errors.name}</div>}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nconst RegisterForm = withFormik({\n  mapPropsToValues: () => ({ name: \"\" }),\n\n  // Custom sync validation\n  validate: values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n\n    return errors;\n  },\n\n  handleSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n\n  displayName: \"BasicForm\"\n})(MyForm);\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}