{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/components/Messages/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Empty, Spin } from \"antd\";\nimport classNames from \"classnames\";\nimport { Message } from \"../\";\nimport \"./Messages.scss\";\n\nconst Messages = ({\n  blockRef,\n  isLoading,\n  items\n}) => {\n  return React.createElement(\"div\", {\n    ref: blockRef,\n    className: classNames(\"messages\", {\n      \"messages--loading\": isLoading\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, isLoading ? React.createElement(Spin, {\n    size: \"large\",\n    tip: \"Loading...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : items && !isLoading ? items.length > 0 ? items.map(item => React.createElement(Message, Object.assign({\n    key: item._id\n  }, item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }))) : React.createElement(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"No messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : React.createElement(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"Choose dialog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nMessages.propTypes = {\n  items: PropTypes.array\n};\nexport default Messages;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/components/Messages/index.jsx"],"names":["React","PropTypes","Empty","Spin","classNames","Message","Messages","blockRef","isLoading","items","length","map","item","_id","PRESENTED_IMAGE_SIMPLE","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,MAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,OAAT,QAAwB,KAAxB;AAEA,OAAO,iBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,KAAoC;AACnD,SACE;AACE,IAAA,GAAG,EAAEF,QADP;AAEE,IAAA,SAAS,EAAEH,UAAU,CAAC,UAAD,EAAa;AAAE,2BAAqBI;AAAvB,KAAb,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,SAAS,GACR,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,GAAG,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAENC,KAAK,IAAI,CAACD,SAAV,GACFC,KAAK,CAACC,MAAN,GAAe,CAAf,GACED,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAI,CAACC;AAAnB,KAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB,CADF,GAGE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEV,KAAK,CAACY,sBADf;AAEE,IAAA,WAAW,EAAC,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,GAUF,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEZ,KAAK,CAACY,sBADf;AAEE,IAAA,WAAW,EAAC,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADF;AAwBD,CAzBD;;AA2BAR,QAAQ,CAACS,SAAT,GAAqB;AACnBN,EAAAA,KAAK,EAAER,SAAS,CAACe;AADE,CAArB;AAIA,eAAeV,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Empty, Spin } from \"antd\";\nimport classNames from \"classnames\";\n\nimport { Message } from \"../\";\n\nimport \"./Messages.scss\";\n\nconst Messages = ({ blockRef, isLoading, items }) => {\n  return (\n    <div\n      ref={blockRef}\n      className={classNames(\"messages\", { \"messages--loading\": isLoading })}\n    >\n      {isLoading ? (\n        <Spin size=\"large\" tip=\"Loading...\"></Spin>\n      ) : items && !isLoading ? (\n        items.length > 0 ? (\n          items.map(item => <Message key={item._id} {...item} />)\n        ) : (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"No messages\"\n          />\n        )\n      ) : (\n        <Empty\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n          description=\"Choose dialog\"\n        />\n      )}\n    </div>\n  );\n};\n\nMessages.propTypes = {\n  items: PropTypes.array\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}