{"ast":null,"code":"import _slicedToArray from \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { convertCurrentTime } from \"utils/helpers\";\nimport waveSvg from \"assets/img/wave.svg\";\nimport playSvg from \"assets/img/play.svg\";\nimport pauseSvg from \"assets/img/pause.svg\";\nimport { Time, IconReaded } from \"components\";\nimport \"./Message.scss\";\n\nconst MessageAudio = ({\n  audio\n}) => {\n  const audioElem = useRef(null);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isPlaying = _useState2[0],\n        setIsPlaying = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        audioProgress = _useState4[0],\n        setProgress = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentTime = _useState6[0],\n        setCurrentTime = _useState6[1];\n\n  const togglePlay = () => {\n    if (!isPlaying) {\n      audioElem.current.play();\n    } else {\n      audioElem.current.pause();\n    }\n  };\n\n  useEffect(() => {\n    audioElem.current.volume = \"0.1\";\n    audioElem.current.addEventListener(\"playing\", () => {\n      setIsPlaying(true);\n    }, false);\n    audioElem.current.addEventListener(\"pause\", () => {\n      setIsPlaying(false);\n    }, false);\n    audioElem.current.addEventListener(\"ended\", () => {\n      setIsPlaying(false);\n      setProgress(0);\n      setCurrentTime(0);\n    }, false);\n    audioElem.current.addEventListener(\"timeupdate\", () => {\n      const duration = audioElem.current && audioElem.current.duration || 0;\n      setCurrentTime(audioElem.current.currentTime);\n      setProgress(audioElem.current.currentTime / duration * 100);\n    });\n  });\n  return React.createElement(\"div\", {\n    className: \"message__audio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"audio\", {\n    ref: audioElem,\n    src: audio,\n    preload: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"message__audio-progress\",\n    style: {\n      width: audioProgress + \"%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"message__audio-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message__audio-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: togglePlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, isPlaying ? React.createElement(\"img\", {\n    src: pauseSvg,\n    alt: \"Pause svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: playSvg,\n    alt: \"Play svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"message__audio-wave\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: waveSvg,\n    alt: \"Wave svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"message__audio-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, convertCurrentTime(currentTime))));\n};\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  audio,\n  date,\n  isMe,\n  isReaded,\n  attachments,\n  isTyping\n}) => {\n  return React.createElement(\"div\", {\n    className: classNames(\"message\", {\n      \"message--isme\": isMe,\n      \"message--is-typing\": isTyping,\n      \"message--is-audio\": audio,\n      \"message--image\": attachments && attachments.length === 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(IconReaded, {\n    isMe: isMe,\n    isReaded: isReaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"message__avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar,\n    alt: `Avatar ${user.fullname}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"message__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, (audio || text || isTyping) && React.createElement(\"div\", {\n    className: \"message__bubble\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, text && React.createElement(\"p\", {\n    className: \"message__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, text), isTyping && React.createElement(\"div\", {\n    className: \"message__typing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), audio && React.createElement(MessageAudio, {\n    audio: audio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), attachments && React.createElement(\"div\", {\n    className: \"message__attachments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, attachments.map(item => React.createElement(\"div\", {\n    className: \"message__attachments-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.url,\n    alt: item.filename,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })))), date && React.createElement(\"span\", {\n    className: \"message__date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Time, {\n    date: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })))));\n};\n\nMessage.defaultProps = {\n  user: {}\n};\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isMe: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool,\n  audio: PropTypes.string\n};\nexport default Message;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.jsx"],"names":["React","useState","useRef","useEffect","PropTypes","classNames","convertCurrentTime","Time","IconReaded","MessageAudio","audio","audioElem","isPlaying","setIsPlaying","audioProgress","setProgress","currentTime","setCurrentTime","togglePlay","current","play","pause","volume","addEventListener","duration","width","pauseSvg","playSvg","waveSvg","Message","avatar","user","text","date","isMe","isReaded","attachments","isTyping","length","fullname","map","item","url","filename","defaultProps","propTypes","string","object","array","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,kBAAT,QAAmC,eAAnC;;;;AAMA,SAASC,IAAT,EAAeC,UAAf,QAAiC,YAAjC;AAEA,OAAO,gBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAClC,QAAMC,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;;AADkC,oBAEAD,QAAQ,CAAC,KAAD,CAFR;AAAA;AAAA,QAE3BW,SAF2B;AAAA,QAEhBC,YAFgB;;AAAA,qBAGGZ,QAAQ,CAAC,CAAD,CAHX;AAAA;AAAA,QAG3Ba,aAH2B;AAAA,QAGZC,WAHY;;AAAA,qBAIId,QAAQ,CAAC,CAAD,CAJZ;AAAA;AAAA,QAI3Be,WAJ2B;AAAA,QAIdC,cAJc;;AAMlC,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAI,CAACN,SAAL,EAAgB;AACdD,MAAAA,SAAS,CAACQ,OAAV,CAAkBC,IAAlB;AACD,KAFD,MAEO;AACLT,MAAAA,SAAS,CAACQ,OAAV,CAAkBE,KAAlB;AACD;AACF,GAND;;AAQAlB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,CAACQ,OAAV,CAAkBG,MAAlB,GAA2B,KAA3B;AACAX,IAAAA,SAAS,CAACQ,OAAV,CAAkBI,gBAAlB,CACE,SADF,EAEE,MAAM;AACJV,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAJH,EAKE,KALF;AAOAF,IAAAA,SAAS,CAACQ,OAAV,CAAkBI,gBAAlB,CACE,OADF,EAEE,MAAM;AACJV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH,EAKE,KALF;AAOAF,IAAAA,SAAS,CAACQ,OAAV,CAAkBI,gBAAlB,CACE,OADF,EAEE,MAAM;AACJV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,WAAW,CAAC,CAAD,CAAX;AACAE,MAAAA,cAAc,CAAC,CAAD,CAAd;AACD,KANH,EAOE,KAPF;AASAN,IAAAA,SAAS,CAACQ,OAAV,CAAkBI,gBAAlB,CAAmC,YAAnC,EAAiD,MAAM;AACrD,YAAMC,QAAQ,GAAIb,SAAS,CAACQ,OAAV,IAAqBR,SAAS,CAACQ,OAAV,CAAkBK,QAAxC,IAAqD,CAAtE;AACAP,MAAAA,cAAc,CAACN,SAAS,CAACQ,OAAV,CAAkBH,WAAnB,CAAd;AACAD,MAAAA,WAAW,CAAEJ,SAAS,CAACQ,OAAV,CAAkBH,WAAlB,GAAgCQ,QAAjC,GAA6C,GAA9C,CAAX;AACD,KAJD;AAKD,GA9BQ,CAAT;AAgCA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,GAAG,EAAEb,SAAZ;AAAuB,IAAA,GAAG,EAAED,KAA5B;AAAmC,IAAA,OAAO,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAEX,aAAa,GAAG;AAAzB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,GACR;AAAK,IAAA,GAAG,EAAEc,QAAV;AAAoB,IAAA,GAAG,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,GAAG,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,GAAG,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,EAaE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,kBAAkB,CAACU,WAAD,CADrB,CAbF,CANF,CADF;AA0BD,CAxED;;AA0EA,MAAMa,OAAO,GAAG,CAAC;AACfC,EAAAA,MADe;AAEfC,EAAAA,IAFe;AAGfC,EAAAA,IAHe;AAIftB,EAAAA,KAJe;AAKfuB,EAAAA,IALe;AAMfC,EAAAA,IANe;AAOfC,EAAAA,QAPe;AAQfC,EAAAA,WARe;AASfC,EAAAA;AATe,CAAD,KAUV;AACJ,SACE;AACE,IAAA,SAAS,EAAEhC,UAAU,CAAC,SAAD,EAAY;AAC/B,uBAAiB6B,IADc;AAE/B,4BAAsBG,QAFS;AAG/B,2BAAqB3B,KAHU;AAI/B,wBAAkB0B,WAAW,IAAIA,WAAW,CAACE,MAAZ,KAAuB;AAJzB,KAAZ,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEJ,IAAlB;AAAwB,IAAA,QAAQ,EAAEC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEL,MAAV;AAAkB,IAAA,GAAG,EAAG,UAASC,IAAI,CAACQ,QAAS,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC7B,KAAK,IAAIsB,IAAT,IAAiBK,QAAlB,KACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,IAAI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAA9B,CADX,EAEGK,QAAQ,IACP;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHJ,EASG3B,KAAK,IAAI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATZ,CAFJ,EAeG0B,WAAW,IACV;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WAAW,CAACI,GAAZ,CAAgBC,IAAI,IACnB;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,GAAG,EAAED,IAAI,CAACE,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAhBJ,EAyBGV,IAAI,IACH;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1BJ,CALF,CARF,CADF;AAgDD,CA3DD;;AA6DAJ,OAAO,CAACe,YAAR,GAAuB;AACrBb,EAAAA,IAAI,EAAE;AADe,CAAvB;AAIAF,OAAO,CAACgB,SAAR,GAAoB;AAClBf,EAAAA,MAAM,EAAE1B,SAAS,CAAC0C,MADA;AAElBd,EAAAA,IAAI,EAAE5B,SAAS,CAAC0C,MAFE;AAGlBb,EAAAA,IAAI,EAAE7B,SAAS,CAAC0C,MAHE;AAIlBf,EAAAA,IAAI,EAAE3B,SAAS,CAAC2C,MAJE;AAKlBX,EAAAA,WAAW,EAAEhC,SAAS,CAAC4C,KALL;AAMlBd,EAAAA,IAAI,EAAE9B,SAAS,CAAC6C,IANE;AAOlBd,EAAAA,QAAQ,EAAE/B,SAAS,CAAC6C,IAPF;AAQlBZ,EAAAA,QAAQ,EAAEjC,SAAS,CAAC6C,IARF;AASlBvC,EAAAA,KAAK,EAAEN,SAAS,CAAC0C;AATC,CAApB;AAYA,eAAejB,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { convertCurrentTime } from \"utils/helpers\";\n\nimport waveSvg from \"assets/img/wave.svg\";\nimport playSvg from \"assets/img/play.svg\";\nimport pauseSvg from \"assets/img/pause.svg\";\n\nimport { Time, IconReaded } from \"components\";\n\nimport \"./Message.scss\";\n\nconst MessageAudio = ({ audio }) => {\n  const audioElem = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioProgress, setProgress] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const togglePlay = () => {\n    if (!isPlaying) {\n      audioElem.current.play();\n    } else {\n      audioElem.current.pause();\n    }\n  };\n\n  useEffect(() => {\n    audioElem.current.volume = \"0.1\";\n    audioElem.current.addEventListener(\n      \"playing\",\n      () => {\n        setIsPlaying(true);\n      },\n      false\n    );\n    audioElem.current.addEventListener(\n      \"pause\",\n      () => {\n        setIsPlaying(false);\n      },\n      false\n    );\n    audioElem.current.addEventListener(\n      \"ended\",\n      () => {\n        setIsPlaying(false);\n        setProgress(0);\n        setCurrentTime(0);\n      },\n      false\n    );\n    audioElem.current.addEventListener(\"timeupdate\", () => {\n      const duration = (audioElem.current && audioElem.current.duration) || 0;\n      setCurrentTime(audioElem.current.currentTime);\n      setProgress((audioElem.current.currentTime / duration) * 100);\n    });\n  });\n\n  return (\n    <div className=\"message__audio\">\n      <audio ref={audioElem} src={audio} preload=\"auto\" />\n      <div\n        className=\"message__audio-progress\"\n        style={{ width: audioProgress + \"%\" }}\n      ></div>\n      <div className=\"message__audio-info\">\n        <div className=\"message__audio-btn\">\n          <button onClick={togglePlay}>\n            {isPlaying ? (\n              <img src={pauseSvg} alt=\"Pause svg\" />\n            ) : (\n              <img src={playSvg} alt=\"Play svg\" />\n            )}\n          </button>\n        </div>\n        <div className=\"message__audio-wave\">\n          <img src={waveSvg} alt=\"Wave svg\" />\n        </div>\n        <span className=\"message__audio-duration\">\n          {convertCurrentTime(currentTime)}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  audio,\n  date,\n  isMe,\n  isReaded,\n  attachments,\n  isTyping\n}) => {\n  return (\n    <div\n      className={classNames(\"message\", {\n        \"message--isme\": isMe,\n        \"message--is-typing\": isTyping,\n        \"message--is-audio\": audio,\n        \"message--image\": attachments && attachments.length === 1\n      })}\n    >\n      <div className=\"message__content\">\n        <IconReaded isMe={isMe} isReaded={isReaded} />\n        <div className=\"message__avatar\">\n          <img src={avatar} alt={`Avatar ${user.fullname}`} />\n        </div>\n        <div className=\"message__info\">\n          {(audio || text || isTyping) && (\n            <div className=\"message__bubble\">\n              {text && <p className=\"message__text\">{text}</p>}\n              {isTyping && (\n                <div className=\"message__typing\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              )}\n              {audio && <MessageAudio audio={audio} />}\n            </div>\n          )}\n\n          {attachments && (\n            <div className=\"message__attachments\">\n              {attachments.map(item => (\n                <div className=\"message__attachments-item\">\n                  <img src={item.url} alt={item.filename} />\n                </div>\n              ))}\n            </div>\n          )}\n\n          {date && (\n            <span className=\"message__date\">\n              <Time date={date} />\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.defaultProps = {\n  user: {}\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isMe: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool,\n  audio: PropTypes.string\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}