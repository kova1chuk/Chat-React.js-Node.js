{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/containers/Messages.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { messagesActions } from \"redux/actions\";\nimport { Messages as BaseMessages } from \"components\";\n\nconst Messages = ({\n  currentDialogId,\n  fetchMessages,\n  items\n}) => {\n  useEffect(() => {\n    fetchMessages(currentDialogId);\n  }, [currentDialogId]);\n  return React.createElement(BaseMessages, {\n    items: items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n};\n\nexport default connect(({\n  dialogs,\n  messages\n}) => ({\n  currentDialogId: dialogs.currentDialogId,\n  items: messages.items\n}), messagesActions)(Messages);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/containers/Messages.jsx"],"names":["React","useEffect","connect","messagesActions","Messages","BaseMessages","currentDialogId","fetchMessages","items","dialogs","messages"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,QAAQ,IAAIC,YAArB,QAAyC,YAAzC;;AAEA,MAAMD,QAAQ,GAAG,CAAC;AAAEE,EAAAA,eAAF;AAAmBC,EAAAA,aAAnB;AAAkCC,EAAAA;AAAlC,CAAD,KAA+C;AAC9DP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,aAAa,CAACD,eAAD,CAAb;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAIA,SAAO,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAND;;AAQA,eAAeN,OAAO,CACpB,CAAC;AAAEO,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,MAA4B;AAC1BJ,EAAAA,eAAe,EAAEG,OAAO,CAACH,eADC;AAE1BE,EAAAA,KAAK,EAAEE,QAAQ,CAACF;AAFU,CAA5B,CADoB,EAKpBL,eALoB,CAAP,CAMbC,QANa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { messagesActions } from \"redux/actions\";\nimport { Messages as BaseMessages } from \"components\";\n\nconst Messages = ({ currentDialogId, fetchMessages, items }) => {\n  useEffect(() => {\n    fetchMessages(currentDialogId);\n  }, [currentDialogId]);\n\n  return <BaseMessages items={items} />;\n};\n\nexport default connect(\n  ({ dialogs, messages }) => ({\n    currentDialogId: dialogs.currentDialogId,\n    items: messages.items\n  }),\n  messagesActions\n)(Messages);\n"]},"metadata":{},"sourceType":"module"}