{"ast":null,"code":"import { withFormik } from \"formik\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport { compose } from \"redux\";\nexport default compose(withFormik({\n  mapPropsToValues: () => ({\n    email: \"fasd\"\n  }),\n  validate: values => {\n    let errors = {};\n\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = \"Invalid email address\";\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: \"RegisterForm\"\n})(RegisterForm));","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/modules/RegisterForm/containers/RegisterForm.js"],"names":["withFormik","RegisterForm","compose","mapPropsToValues","email","validate","values","errors","test","handleSubmit","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SAASC,OAAT,QAAwB,OAAxB;AAEA,eAAeA,OAAO,CACpBF,UAAU,CAAC;AACTG,EAAAA,gBAAgB,EAAE,OAAO;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAP,CADT;AAGTC,EAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;AACjBG,MAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACD,KAFD,MAEO,IACL,CAAC,4CAA4CI,IAA5C,CAAiDF,MAAM,CAACF,KAAxD,CADI,EAEL;AACAG,MAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACD;;AACD,WAAOG,MAAP;AACD,GAbQ;AAeTE,EAAAA,YAAY,EAAE,CAACH,MAAD,EAAS;AAAEI,IAAAA;AAAF,GAAT,KAA+B;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAI,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GApBQ;AAsBTK,EAAAA,WAAW,EAAE;AAtBJ,CAAD,CAAV,CAuBGd,YAvBH,CADoB,CAAtB","sourcesContent":["import { withFormik } from \"formik\";\n\nimport RegisterForm from \"../components/RegisterForm\";\n\nimport { compose } from \"redux\";\n\nexport default compose(\n  withFormik({\n    mapPropsToValues: () => ({ email: \"fasd\" }),\n\n    validate: values => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n      ) {\n        errors.email = \"Invalid email address\";\n      }\n      return errors;\n    },\n\n    handleSubmit: (values, { setSubmitting }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 1000);\n    },\n\n    displayName: \"RegisterForm\"\n  })(RegisterForm)\n);\n"]},"metadata":{},"sourceType":"module"}