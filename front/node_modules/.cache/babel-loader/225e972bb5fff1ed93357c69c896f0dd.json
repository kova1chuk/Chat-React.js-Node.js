{"ast":null,"code":"import { withFormik } from \"formik\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport validate from \"utils/validate\";\nexport default withFormik({\n  validate: values => {\n    let errors = {};\n    const keys = Object.keys(values);\n    keys.forEach(key => validate[key] && validate[key](errors, values[key]));\n\n    if (values.password) {\n      errors.password = \"Enter password\";\n    } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(values.password)) {\n      errors.password = \"Enter strong password\";\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: \"RegisterForm\"\n})(RegisterForm);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/modules/RegisterForm/containers/RegisterForm.js"],"names":["withFormik","RegisterForm","validate","values","errors","keys","Object","forEach","key","password","test","handleSubmit","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,eAAeF,UAAU,CAAC;AACxBE,EAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,QAAIC,MAAM,GAAG,EAAb;AAEA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAb;AACAE,IAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAIN,QAAQ,CAACM,GAAD,CAAR,IAAiBN,QAAQ,CAACM,GAAD,CAAR,CAAcJ,MAAd,EAAsBD,MAAM,CAACK,GAAD,CAA5B,CAArC;;AAEA,QAAIL,MAAM,CAACM,QAAX,EAAqB;AACnBL,MAAAA,MAAM,CAACK,QAAP,GAAkB,gBAAlB;AACD,KAFD,MAEO,IACL,CAAC,8CAA8CC,IAA9C,CAAmDP,MAAM,CAACM,QAA1D,CADI,EAEL;AACAL,MAAAA,MAAM,CAACK,QAAP,GAAkB,uBAAlB;AACD;;AACD,WAAOL,MAAP;AACD,GAfuB;AAiBxBO,EAAAA,YAAY,EAAE,CAACR,MAAD,EAAS;AAAES,IAAAA;AAAF,GAAT,KAA+B;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeb,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAS,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAtBuB;AAwBxBK,EAAAA,WAAW,EAAE;AAxBW,CAAD,CAAV,CAyBZhB,YAzBY,CAAf","sourcesContent":["import { withFormik } from \"formik\";\n\nimport RegisterForm from \"../components/RegisterForm\";\nimport validate from \"utils/validate\";\n\nexport default withFormik({\n  validate: values => {\n    let errors = {};\n\n    const keys = Object.keys(values);\n    keys.forEach(key => validate[key] && validate[key](errors, values[key]));\n\n    if (values.password) {\n      errors.password = \"Enter password\";\n    } else if (\n      !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(values.password)\n    ) {\n      errors.password = \"Enter strong password\";\n    }\n    return errors;\n  },\n\n  handleSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n\n  displayName: \"RegisterForm\"\n})(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}