{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Time, IconReaded } from \"components\";\nimport \"./Message.scss\";\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  audio,\n  date,\n  isMe,\n  isReaded,\n  attachments,\n  isTyping\n}) => React.createElement(\"div\", {\n  className: classNames(\"message\", {\n    \"message--isme\": isMe,\n    \"message--is-typing\": isTyping,\n    \"message--image\": attachments && attachments.length === 1\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"message__content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(IconReaded, {\n  isMe: isMe,\n  isReaded: isReaded,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"message__avatar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: avatar,\n  alt: `Avatar ${user.fullname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"message__info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, (text || isTyping) && React.createElement(\"div\", {\n  className: \"message__bubble\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, text && React.createElement(\"p\", {\n  className: \"message__text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, text), isTyping && React.createElement(\"div\", {\n  className: \"message__typing\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}))), React.createElement(\"div\", {\n  className: \"message__attachments\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, attachments && attachments.map(item => React.createElement(\"div\", {\n  className: \"message__attachments-item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: item.url,\n  alt: item.filename,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n})))), date && React.createElement(\"span\", {\n  className: \"message__date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(Time, {\n  date: date,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n})))));\n\nMessage.defaultProps = {\n  user: {}\n};\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isMe: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool,\n  audio: PropTypes.string\n};\nexport default Message;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.jsx"],"names":["React","PropTypes","classNames","Time","IconReaded","Message","avatar","user","text","audio","date","isMe","isReaded","attachments","isTyping","length","fullname","map","item","url","filename","defaultProps","propTypes","string","object","array","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport { Time, IconReaded } from \"components\";\n\nimport \"./Message.scss\";\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  audio,\n  date,\n  isMe,\n  isReaded,\n  attachments,\n  isTyping\n}) => (\n  <div\n    className={classNames(\"message\", {\n      \"message--isme\": isMe,\n      \"message--is-typing\": isTyping,\n      \"message--image\": attachments && attachments.length === 1\n    })}\n  >\n    <div className=\"message__content\">\n      <IconReaded isMe={isMe} isReaded={isReaded} />\n      <div className=\"message__avatar\">\n        <img src={avatar} alt={`Avatar ${user.fullname}`} />\n      </div>\n      <div className=\"message__info\">\n        {(text || isTyping) && (\n          <div className=\"message__bubble\">\n            {text && <p className=\"message__text\">{text}</p>}\n            {isTyping && (\n              <div className=\"message__typing\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            )}\n          </div>\n        )}\n        <div className=\"message__attachments\">\n          {attachments &&\n            attachments.map(item => (\n              <div className=\"message__attachments-item\">\n                <img src={item.url} alt={item.filename} />\n              </div>\n            ))}\n        </div>\n        {date && (\n          <span className=\"message__date\">\n            <Time date={date} />\n            {/* {formatDistanceToNow(new Date(date), { addSuffix: true })} */}\n          </span>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nMessage.defaultProps = {\n  user: {}\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object,\n  attachments: PropTypes.array,\n  isMe: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool,\n  audio: PropTypes.string\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}