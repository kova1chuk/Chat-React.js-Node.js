{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _registerListeners = require('./register-listeners');\n\nvar _registerListeners2 = _interopRequireDefault(_registerListeners);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (_ref) {\n  var request = _ref.request,\n      files = _ref.files,\n      instance = _ref.instance,\n      progress = _ref.progress;\n  return new Promise(function (resolve) {\n    var xhr = new XMLHttpRequest();\n    if (instance) instance(xhr);\n    (0, _registerListeners2.default)({\n      xhr: xhr,\n      resolve: resolve,\n      progress: progress\n    });\n    xhr.open(request.method || 'POST', request.url);\n    xhr.withCredentials = request.withCredentials || false;\n\n    if (request.headers) {\n      Object.keys(request.headers).forEach(function (header) {\n        return xhr.setRequestHeader(header, request.headers[header]);\n      });\n    } //send just the file if no fields or filename is set\n\n\n    if (!request.fileName && !request.fields) return xhr.send(files[0]);\n    var formData = new FormData(); //append fields first, fixes https://github.com/expressjs/multer/issues/322\n\n    if (request.fields) {\n      Object.keys(request.fields).forEach(function (field) {\n        return formData.append(field, request.fields[field]);\n      });\n    }\n\n    Array.from(files).forEach(function (file) {\n      return formData.append(request.fileName || 'file', file);\n    });\n    xhr.send(formData);\n  });\n};","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/node_modules/@navjobs/upload/dist/request/index.js"],"names":["Object","defineProperty","exports","value","_registerListeners","require","_registerListeners2","_interopRequireDefault","obj","__esModule","default","_ref","request","files","instance","progress","Promise","resolve","xhr","XMLHttpRequest","open","method","url","withCredentials","headers","keys","forEach","header","setRequestHeader","fileName","fields","send","formData","FormData","field","append","Array","from","file"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,sBAAD,CAAhC;;AAEA,IAAIC,mBAAmB,GAAGC,sBAAsB,CAACH,kBAAD,CAAhD;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/FN,OAAO,CAACQ,OAAR,GAAkB,UAAUC,IAAV,EAAgB;AAChC,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,QAAQ,GAAGH,IAAI,CAACG,QAFpB;AAAA,MAGIC,QAAQ,GAAGJ,IAAI,CAACI,QAHpB;AAIA,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACA,QAAIL,QAAJ,EAAcA,QAAQ,CAACI,GAAD,CAAR;AAEd,KAAC,GAAGZ,mBAAmB,CAACI,OAAxB,EAAiC;AAAEQ,MAAAA,GAAG,EAAEA,GAAP;AAAYD,MAAAA,OAAO,EAAEA,OAArB;AAA8BF,MAAAA,QAAQ,EAAEA;AAAxC,KAAjC;AAEAG,IAAAA,GAAG,CAACE,IAAJ,CAASR,OAAO,CAACS,MAAR,IAAkB,MAA3B,EAAmCT,OAAO,CAACU,GAA3C;AACAJ,IAAAA,GAAG,CAACK,eAAJ,GAAsBX,OAAO,CAACW,eAAR,IAA2B,KAAjD;;AAEA,QAAIX,OAAO,CAACY,OAAZ,EAAqB;AACnBxB,MAAAA,MAAM,CAACyB,IAAP,CAAYb,OAAO,CAACY,OAApB,EAA6BE,OAA7B,CAAqC,UAAUC,MAAV,EAAkB;AACrD,eAAOT,GAAG,CAACU,gBAAJ,CAAqBD,MAArB,EAA6Bf,OAAO,CAACY,OAAR,CAAgBG,MAAhB,CAA7B,CAAP;AACD,OAFD;AAGD,KAbmC,CAcpC;;;AACA,QAAI,CAACf,OAAO,CAACiB,QAAT,IAAqB,CAACjB,OAAO,CAACkB,MAAlC,EAA0C,OAAOZ,GAAG,CAACa,IAAJ,CAASlB,KAAK,CAAC,CAAD,CAAd,CAAP;AAE1C,QAAImB,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAjBoC,CAmBpC;;AACA,QAAIrB,OAAO,CAACkB,MAAZ,EAAoB;AAClB9B,MAAAA,MAAM,CAACyB,IAAP,CAAYb,OAAO,CAACkB,MAApB,EAA4BJ,OAA5B,CAAoC,UAAUQ,KAAV,EAAiB;AACnD,eAAOF,QAAQ,CAACG,MAAT,CAAgBD,KAAhB,EAAuBtB,OAAO,CAACkB,MAAR,CAAeI,KAAf,CAAvB,CAAP;AACD,OAFD;AAGD;;AAEDE,IAAAA,KAAK,CAACC,IAAN,CAAWxB,KAAX,EAAkBa,OAAlB,CAA0B,UAAUY,IAAV,EAAgB;AACxC,aAAON,QAAQ,CAACG,MAAT,CAAgBvB,OAAO,CAACiB,QAAR,IAAoB,MAApC,EAA4CS,IAA5C,CAAP;AACD,KAFD;AAIApB,IAAAA,GAAG,CAACa,IAAJ,CAASC,QAAT;AACD,GA/BM,CAAP;AAgCD,CArCD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _registerListeners = require('./register-listeners');\n\nvar _registerListeners2 = _interopRequireDefault(_registerListeners);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (_ref) {\n  var request = _ref.request,\n      files = _ref.files,\n      instance = _ref.instance,\n      progress = _ref.progress;\n  return new Promise(function (resolve) {\n    var xhr = new XMLHttpRequest();\n    if (instance) instance(xhr);\n\n    (0, _registerListeners2.default)({ xhr: xhr, resolve: resolve, progress: progress });\n\n    xhr.open(request.method || 'POST', request.url);\n    xhr.withCredentials = request.withCredentials || false;\n\n    if (request.headers) {\n      Object.keys(request.headers).forEach(function (header) {\n        return xhr.setRequestHeader(header, request.headers[header]);\n      });\n    }\n    //send just the file if no fields or filename is set\n    if (!request.fileName && !request.fields) return xhr.send(files[0]);\n\n    var formData = new FormData();\n\n    //append fields first, fixes https://github.com/expressjs/multer/issues/322\n    if (request.fields) {\n      Object.keys(request.fields).forEach(function (field) {\n        return formData.append(field, request.fields[field]);\n      });\n    }\n\n    Array.from(files).forEach(function (file) {\n      return formData.append(request.fileName || 'file', file);\n    });\n\n    xhr.send(formData);\n  });\n};"]},"metadata":{},"sourceType":"script"}