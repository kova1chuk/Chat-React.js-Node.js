{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport classNames from \"classnames\";\nimport checkedSvg from \"assets/img/checked.svg\";\nimport \"./Message.scss\";\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  isMe,\n  isReaded\n}) => React.createElement(\"div\", {\n  className: classNames(\"message\", {\n    \"message--isme\": isMe\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"message__content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, isMe && isReaded ? React.createElement(\"img\", {\n  className: \"message__icon-readed\",\n  src: checkedSvg,\n  alt: \"Readed icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}) : React.createElement(\"img\", {\n  className: \"message__icon-readed\",\n  src: checkedSvg,\n  alt: \"No readed icon\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"message__avatar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: avatar,\n  alt: `Avatar ${user.fullname}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"message__info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"message__bubble\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"message__text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, text)), React.createElement(\"span\", {\n  className: \"message__date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, formatDistanceToNow(new Date(date), {\n  addSuffix: true\n})))));\n\nMessage.defaultProps = {\n  user: {}\n};\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object\n};\nexport default Message;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/Message/index.jsx"],"names":["React","PropTypes","formatDistanceToNow","classNames","Message","avatar","user","text","date","isMe","isReaded","checkedSvg","fullname","Date","addSuffix","defaultProps","propTypes","string","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAIA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA;AAAlC,CAAD,KACd;AAAK,EAAA,SAAS,EAAEP,UAAU,CAAC,SAAD,EAAY;AAAE,qBAAiBM;AAAnB,GAAZ,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,IAAI,IAAIC,QAAR,GACC;AACE,EAAA,SAAS,EAAC,sBADZ;AAEE,EAAA,GAAG,EAAEC,UAFP;AAGE,EAAA,GAAG,EAAC,aAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,GAOC;AACE,EAAA,SAAS,EAAC,sBADZ;AAEE,EAAA,GAAG,EAAEA,UAFP;AAGE,EAAA,GAAG,EAAC,gBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARJ,EAcE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAEN,MAAV;AAAkB,EAAA,GAAG,EAAG,UAASC,IAAI,CAACM,QAAS,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAdF,EAiBE;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8BL,IAA9B,CADF,CADF,EAIE;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGL,mBAAmB,CAAC,IAAIW,IAAJ,CAASL,IAAT,CAAD,EAAiB;AAAEM,EAAAA,SAAS,EAAE;AAAb,CAAjB,CADtB,CAJF,CAjBF,CADF,CADF;;AA+BAV,OAAO,CAACW,YAAR,GAAuB;AACrBT,EAAAA,IAAI,EAAE;AADe,CAAvB;AAIAF,OAAO,CAACY,SAAR,GAAoB;AAClBX,EAAAA,MAAM,EAAEJ,SAAS,CAACgB,MADA;AAElBV,EAAAA,IAAI,EAAEN,SAAS,CAACgB,MAFE;AAGlBT,EAAAA,IAAI,EAAEP,SAAS,CAACgB,MAHE;AAIlBX,EAAAA,IAAI,EAAEL,SAAS,CAACiB;AAJE,CAApB;AAOA,eAAed,OAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport classNames from \"classnames\";\n\nimport checkedSvg from \"assets/img/checked.svg\";\n\nimport \"./Message.scss\";\n\nconst Message = ({ avatar, user, text, date, isMe, isReaded }) => (\n  <div className={classNames(\"message\", { \"message--isme\": isMe })}>\n    <div className=\"message__content\">\n      {isMe && isReaded ? (\n        <img\n          className=\"message__icon-readed\"\n          src={checkedSvg}\n          alt=\"Readed icon\"\n        />\n      ) : (\n        <img\n          className=\"message__icon-readed\"\n          src={checkedSvg}\n          alt=\"No readed icon\"\n        />\n      )}\n      <div className=\"message__avatar\">\n        <img src={avatar} alt={`Avatar ${user.fullname}`} />\n      </div>\n      <div className=\"message__info\">\n        <div className=\"message__bubble\">\n          <p className=\"message__text\">{text}</p>\n        </div>\n        <span className=\"message__date\">\n          {formatDistanceToNow(new Date(date), { addSuffix: true })}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nMessage.defaultProps = {\n  user: {}\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  text: PropTypes.string,\n  date: PropTypes.string,\n  user: PropTypes.object\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}