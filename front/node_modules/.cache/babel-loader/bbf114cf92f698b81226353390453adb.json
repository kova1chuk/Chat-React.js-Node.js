{"ast":null,"code":"export default (({\n  isAuth,\n  values,\n  errors\n}) => {\n  const rules = {\n    email: value => {\n      if (!value) {\n        errors.email = \"Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        errors.email = \"Invalid email address\";\n      }\n    },\n    password: value => {\n      if (!value) {\n        errors.password = \"Enter password\";\n      } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)) {\n        errors.password = isAuth ? \"Not correct pass!\" : \"Enter strong password\";\n      }\n    }\n  };\n  Object.keys(values).forEach(key => rules[key] && rules[key](errors, values[key]));\n});","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/utils/validate.js"],"names":["isAuth","values","errors","rules","email","value","test","password","Object","keys","forEach","key"],"mappings":"AAAA,gBAAe,CAAC;AAAEA,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AAC7C,QAAMC,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAEC,KAAK,IAAI;AACd,UAAI,CAACA,KAAL,EAAY;AACVH,QAAAA,MAAM,CAACE,KAAP,GAAe,UAAf;AACD,OAFD,MAEO,IAAI,CAAC,4CAA4CE,IAA5C,CAAiDD,KAAjD,CAAL,EAA8D;AACnEH,QAAAA,MAAM,CAACE,KAAP,GAAe,uBAAf;AACD;AACF,KAPW;AAQZG,IAAAA,QAAQ,EAAEF,KAAK,IAAI;AACjB,UAAI,CAACA,KAAL,EAAY;AACVH,QAAAA,MAAM,CAACK,QAAP,GAAkB,gBAAlB;AACD,OAFD,MAEO,IAAI,CAAC,8CAA8CD,IAA9C,CAAmDD,KAAnD,CAAL,EAAgE;AACrEH,QAAAA,MAAM,CAACK,QAAP,GAAkBP,MAAM,GACpB,mBADoB,GAEpB,uBAFJ;AAGD;AACF;AAhBW,GAAd;AAmBAQ,EAAAA,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,OAApB,CACEC,GAAG,IAAIR,KAAK,CAACQ,GAAD,CAAL,IAAcR,KAAK,CAACQ,GAAD,CAAL,CAAWT,MAAX,EAAmBD,MAAM,CAACU,GAAD,CAAzB,CADvB;AAGD,CAvBD","sourcesContent":["export default ({ isAuth, values, errors }) => {\n  const rules = {\n    email: value => {\n      if (!value) {\n        errors.email = \"Required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        errors.email = \"Invalid email address\";\n      }\n    },\n    password: value => {\n      if (!value) {\n        errors.password = \"Enter password\";\n      } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)) {\n        errors.password = isAuth\n          ? \"Not correct pass!\"\n          : \"Enter strong password\";\n      }\n    }\n  };\n\n  Object.keys(values).forEach(\n    key => rules[key] && rules[key](errors, values[key])\n  );\n};\n"]},"metadata":{},"sourceType":"module"}