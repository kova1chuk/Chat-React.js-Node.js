{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/DialogItem/index.jsx\";\nimport React from \"react\";\nimport { Time, IconReaded } from \"../\";\n\nconst getAvatar = avatar => {\n  if (avatar) {\n    return React.createElement(\"img\", {\n      src: user.avatar,\n      alt: `${user.fullname} avatar`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    });\n  } else {//make\n  }\n};\n\nconst DialogItem = ({\n  user,\n  message\n}) => React.createElement(\"div\", {\n  className: \"dialogs_item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"dialogs__item-avatar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, getAvatar), React.createElement(\"div\", {\n  className: \"dialogs__item-info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"dialogs__item-info-top\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Dostoevskiy Fedor\"), React.createElement(Time, {\n  date: new Date(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"dialogs__item-ingo-bottom\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Real text for my massanjager\"), React.createElement(IconReaded, {\n  isMe: true,\n  isReaded: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}))));\n\nexport default DialogItem;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/components/DialogItem/index.jsx"],"names":["React","Time","IconReaded","getAvatar","avatar","user","fullname","DialogItem","message","Date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,UAAf,QAAiC,KAAjC;;AAEA,MAAMC,SAAS,GAAGC,MAAM,IAAI;AAC1B,MAAIA,MAAJ,EAAY;AACV,WAAO;AAAK,MAAA,GAAG,EAAEC,IAAI,CAACD,MAAf;AAAuB,MAAA,GAAG,EAAG,GAAEC,IAAI,CAACC,QAAS,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,CACL;AACD;AACF,CAND;;AAQA,MAAMC,UAAU,GAAG,CAAC;AAAEF,EAAAA,IAAF;AAAQG,EAAAA;AAAR,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGL,SADH,CADF,EAKE;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE,IAAIM,IAAJ,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,EAKE;AAAK,EAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,oBAAC,UAAD;AAAY,EAAA,IAAI,EAAE,IAAlB;AAAwB,EAAA,QAAQ,EAAE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CALF,CALF,CADF;;AAmBA,eAAeF,UAAf","sourcesContent":["import React from \"react\";\n\nimport { Time, IconReaded } from \"../\";\n\nconst getAvatar = avatar => {\n  if (avatar) {\n    return <img src={user.avatar} alt={`${user.fullname} avatar`} />;\n  } else {\n    //make\n  }\n};\n\nconst DialogItem = ({ user, message }) => (\n  <div className=\"dialogs_item\">\n    <div className=\"dialogs__item-avatar\">\n      {getAvatar}\n      {/* <img src={user.avatar} alt={`${user.fullname} avatar`} /> */}\n    </div>\n    <div className=\"dialogs__item-info\">\n      <div className=\"dialogs__item-info-top\">\n        <b>Dostoevskiy Fedor</b>\n        <Time date={new Date()} />\n      </div>\n      <div className=\"dialogs__item-ingo-bottom\">\n        <p>Real text for my massanjager</p>\n        <IconReaded isMe={true} isReaded={false} />\n      </div>\n    </div>\n  </div>\n);\n\nexport default DialogItem;\n"]},"metadata":{},"sourceType":"module"}