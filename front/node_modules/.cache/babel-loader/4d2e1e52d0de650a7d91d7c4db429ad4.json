{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/components/Messages/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Empty, Spin, Alert } from \"antd\";\nimport { Message } from \"../\";\n\nconst Messages = ({\n  isLoading,\n  items\n}) => {\n  return React.createElement(\"div\", {\n    className: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    message: \"Alert message titile\",\n    descriptio: \"Loading\",\n    type: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n  return items ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, items.map(item => React.createElement(Message, Object.assign({\n    key: item._id\n  }, item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })))) : React.createElement(Empty, {\n    image: Empty.PRESENTED_IMAGE_SIMPLE,\n    description: \"Choose dialog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n};\n\nMessages.propTypes = {\n  items: PropTypes.array\n};\nexport default Messages;","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/components/Messages/index.jsx"],"names":["React","PropTypes","Empty","Spin","Alert","Message","Messages","isLoading","items","map","item","_id","PRESENTED_IMAGE_SIMPLE","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAmC,MAAnC;AAEA,SAASC,OAAT,QAAwB,KAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA0B;AACzC,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,sBAAf;AAAsC,IAAA,UAAU,EAAC,SAAjD;AAA2D,IAAA,IAAI,EAAC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMA,SAAOA,KAAK,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,IAAI,CAACC;AAAnB,KAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADU,GAOV,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER,KAAK,CAACU,sBAApB;AAA4C,IAAA,WAAW,EAAC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF;AASD,CAhBD;;AAkBAN,QAAQ,CAACO,SAAT,GAAqB;AACnBL,EAAAA,KAAK,EAAEP,SAAS,CAACa;AADE,CAArB;AAIA,eAAeR,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Empty, Spin, Alert } from \"antd\";\n\nimport { Message } from \"../\";\n\nconst Messages = ({ isLoading, items }) => {\n  return (\n    <div className=\"messages\">\n      <Alert message=\"Alert message titile\" descriptio=\"Loading\" type=\"info\" />\n    </div>\n  );\n\n  return items ? (\n    <div>\n      {items.map(item => (\n        <Message key={item._id} {...item} />\n      ))}\n    </div>\n  ) : (\n    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Choose dialog\" />\n  );\n};\n\nMessages.propTypes = {\n  items: PropTypes.array\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}