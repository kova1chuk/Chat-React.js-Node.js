{"ast":null,"code":"import { withFormik } from \"formik\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport validateFunc from \"utils/validate\";\nexport default withFormik({\n  validate: values => {\n    let errors = {};\n    const validate = validateFunc({\n      isAuth: false\n    });\n    Object.keys(values).forEach(key => validate[key] && validate[key](errors, values[key]));\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: \"RegisterForm\"\n})(RegisterForm);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/src/modules/RegisterForm/containers/RegisterForm.js"],"names":["withFormik","RegisterForm","validateFunc","validate","values","errors","isAuth","Object","keys","forEach","key","handleSubmit","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAeF,UAAU,CAAC;AACxBG,EAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,QAAIC,MAAM,GAAG,EAAb;AACA,UAAMF,QAAQ,GAAGD,YAAY,CAAC;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAD,CAA7B;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,OAApB,CACEC,GAAG,IAAIP,QAAQ,CAACO,GAAD,CAAR,IAAiBP,QAAQ,CAACO,GAAD,CAAR,CAAcL,MAAd,EAAsBD,MAAM,CAACM,GAAD,CAA5B,CAD1B;AAIA,WAAOL,MAAP;AACD,GAVuB;AAYxBM,EAAAA,YAAY,EAAE,CAACP,MAAD,EAAS;AAAEQ,IAAAA;AAAF,GAAT,KAA+B;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeZ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAQ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAjBuB;AAmBxBK,EAAAA,WAAW,EAAE;AAnBW,CAAD,CAAV,CAoBZhB,YApBY,CAAf","sourcesContent":["import { withFormik } from \"formik\";\n\nimport RegisterForm from \"../components/RegisterForm\";\nimport validateFunc from \"utils/validate\";\n\nexport default withFormik({\n  validate: values => {\n    let errors = {};\n    const validate = validateFunc({ isAuth: false });\n\n    Object.keys(values).forEach(\n      key => validate[key] && validate[key](errors, values[key])\n    );\n\n    return errors;\n  },\n\n  handleSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n\n  displayName: \"RegisterForm\"\n})(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}