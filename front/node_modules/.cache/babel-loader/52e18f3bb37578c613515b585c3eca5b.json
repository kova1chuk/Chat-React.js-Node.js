{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/containers/Messages.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { messagesActions } from \"redux/actions\";\nimport { Messages as BaseMessages } from \"components\"; // class Dialog extends React.Component {\n//   componentDidUpdate(prevProps) {\n//     const { fetchMessages, currentDialogId } = this.props;\n//     if (prevProps.currentDialogId !== this.props.currentDialogId) {\n//       fetchMessages(currentDialogId);\n//     }\n//   }\n//   render() {\n//     const { items } = this.props;\n//     return <BaseMessages items={items} />;\n//   }\n// }\n\nconst Dialog = ({\n  currentDialogId,\n  fetchMessages,\n  items,\n  isLoading\n}) => {\n  useEffect(() => {\n    if (currentDialogId) {\n      fetchMessages(currentDialogId);\n    }\n  }, [currentDialogId]);\n  return React.createElement(BaseMessages, {\n    items: items,\n    isLoading: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default connect(({\n  dialogs,\n  messages\n}) => ({\n  currentDialogId: dialogs.currentDialogId,\n  items: messages.items,\n  isLoading: messages.isLoading\n}), messagesActions)(Dialog);","map":{"version":3,"sources":["/home/oleksii/Documents/Programming/chat-reactj-nodejs/front/src/containers/Messages.jsx"],"names":["React","useEffect","connect","messagesActions","Messages","BaseMessages","Dialog","currentDialogId","fetchMessages","items","isLoading","dialogs","messages"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,QAAQ,IAAIC,YAArB,QAAyC,YAAzC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,aAAnB;AAAkCC,EAAAA,KAAlC;AAAyCC,EAAAA;AAAzC,CAAD,KAA0D;AACvET,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,eAAJ,EAAqB;AACnBC,MAAAA,aAAa,CAACD,eAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACA,eAAD,CAJM,CAAT;AAMA,SAAO,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEE,KAArB;AAA4B,IAAA,SAAS,EAAEC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CARD;;AAUA,eAAeR,OAAO,CACpB,CAAC;AAAES,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,MAA4B;AAC1BL,EAAAA,eAAe,EAAEI,OAAO,CAACJ,eADC;AAE1BE,EAAAA,KAAK,EAAEG,QAAQ,CAACH,KAFU;AAG1BC,EAAAA,SAAS,EAAEE,QAAQ,CAACF;AAHM,CAA5B,CADoB,EAMpBP,eANoB,CAAP,CAObG,MAPa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { messagesActions } from \"redux/actions\";\nimport { Messages as BaseMessages } from \"components\";\n\n// class Dialog extends React.Component {\n//   componentDidUpdate(prevProps) {\n//     const { fetchMessages, currentDialogId } = this.props;\n//     if (prevProps.currentDialogId !== this.props.currentDialogId) {\n//       fetchMessages(currentDialogId);\n//     }\n//   }\n\n//   render() {\n//     const { items } = this.props;\n//     return <BaseMessages items={items} />;\n//   }\n// }\n\nconst Dialog = ({ currentDialogId, fetchMessages, items, isLoading }) => {\n  useEffect(() => {\n    if (currentDialogId) {\n      fetchMessages(currentDialogId);\n    }\n  }, [currentDialogId]);\n\n  return <BaseMessages items={items} isLoading={isLoading} />;\n};\n\nexport default connect(\n  ({ dialogs, messages }) => ({\n    currentDialogId: dialogs.currentDialogId,\n    items: messages.items,\n    isLoading: messages.isLoading\n  }),\n  messagesActions\n)(Dialog);\n"]},"metadata":{},"sourceType":"module"}